priority -50

snippet if "if ... then ... else ..."
if ${1:condition}
    then ${2:expression}
    else ${3:expression}
endsnippet

snippet case "case ... of ..."
case ${1:expression} of
    ${2:pattern} -> ${3:expression}
    ${4:pattern} -> ${5:expression}
endsnippet

snippet def "definition"
${1:name} :: ${2:Type}
$1 = $0
endsnippet

snippet lang
{-# LANGUAGE ${1:pragma} #-}
endsnippet

snippet main
main :: IO ()
main = do
   ${1:command}
endsnippet

snippet module
module ${1:module} (

    ) where
endsnippet
