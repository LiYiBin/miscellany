snippet fun
	${1:name} ::
	$1 =
snippet main
	main :: IO ()
	main = do
snippet module
	{-# LANGUAGE Rank2Types #-}
	{-# LANGUAGE ViewPatterns #-}
	{-# LANGUAGE MultiParamTypeClasses #-}
	{-# LANGUAGE UndecidableInstances #-}

	module ${1:Module} (

		) where

	import Prelude hiding (catch,(.))
	import Data.Monoid
	import Control.Category
	import Control.Monad
	import Control.Applicative
	import Control.Error
	import qualified Data.Text as T
snippet instance
	instance (${1:precond} ${2:var},) => ${3:class} $2 where
		${4:function} =
